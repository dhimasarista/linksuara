<div class="container-fluid" id="order-main-content">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Input Suara</h1>
        <!-- <div id="add-stocks-button" hidden><a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i>New Order</i></a></div> -->
        <div id="button-return-input-suara" hidden><a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i>Kembali</i></a></div>
    </div>
    <!-- Card Loading -->
    <div class="card shadow mb-4" id="card-spinners">
        <div class="card">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Loading...</h6>
            </div>
            <div class="card-body text-center">
                <div class="spinner-border text-primary m-5" role="status" style="width: 3rem; height: 3rem;">
                    <span class="sr-only">Loading...</span>
                </div>
                <div id="message-loading-card"></div>
                <br>
            </div>
        </div>
    </div>
    <!-- DataTales Example -->
    <div class="card shadow mb-4" id="card-input-suara-tps">
        <div class="card">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary" id="header-input-suara-tps"></h6>
            </div>
            <div class="card-body">
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="on-going-button">
                        <div class="row">
                            <div class="col-md-7">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover table-striped" id="tabel-caleg" width="100%" cellspacing="0">
                                        <thead>
                                            <tr>
                                                <th>No.</th>
                                                <th>Nama</th>
                                                <th>Jumlah Suara</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Caleg List is Here -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <table class="table table-responsive table-hover table-striped" id="tabel-caleg" width="100%" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th>Foto Hasil Perhitungan <span class="required-text">*Required</span></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>
                                                <input type="file" accept="image/*" name="buktiFoto" id="bukti-foto">
                                                <div class="col-md-6 mt-1">
                                                    <div id="delete-photo" hidden>
                                                        <a href="#"  class="px-1 badge badge-danger" id="button-delete-photo">
                                                            <i>
                                                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24"><path fill="currentColor" d="M7 21q-.825 0-1.412-.587T5 19V6H4V4h5V3h6v1h5v2h-1v13q0 .825-.587 1.413T17 21H7Zm2-4h2V8H9v9Zm4 0h2V8h-2v9Z"/></svg>
                                                            </i>
                                                        </a>
                                                        <span id="photo-file-name"></span>
                                                    </div>
                                                </div>
                                                <button id="loading-upload" class="btn" type="button" hidden>
                                                    <span class="spinner-grow spinner-grow-sm" role="status" style="margin-bottom: 10%;"></span>
                                                </button>
                                            </td>
                                        </tr>
                                        
                                    </tbody>
                                </table>
                                <span class="required-text"><h6><i>Note: Mohon input semua suara calon, untuk mengkalkulasi semua perhitungan suara.</i></h6></span>
                                <div style="padding-top: 10px;"></div>
                                <button id="submit-inputsuara" class="btn btn-primary" type="button" disabled>
                                    <span id="loading-inputsuara" class="spinner-border-sm" role="status" style="margin-bottom: 10%;">Submit</span>
                                </button>
                            </div>
                        </div>
                        <script>
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
   <div class="card shadow mb-4" id="card-input-suara-caleg" hidden>
        <div class="card">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary" id="header-input-suara-caleg"></h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover table-striped" id="tabel-inputsuara-pertps" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Nomor TPS</th>
                                <th>Jumlah Suara</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- DataTable is Here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div> 
    <div class="card shadow mb-4" id="card-pilihjenis-inputsuara" hidden>
        <div class="card">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Jenis Input Suara</h6>
            </div>
            <div class="card-body">
                <div class="form-wrap">    
                    <form id="survey-form">
                        <div class="row">
                            <div class="col-md-12">
                                <div id="existing-product">
                                    <div class="form-group">
                                        <label id="pilihjenis-label" for="pilihjenis-inputsuara">Pilih Jenis Input Suara</label>
                                        <select class="form-control scrollable-menu" id="pilihjenis-inputsuara" name="pilihJenis" onchange="pilihJenisInputSuaraEvent()" onfocus="this.size=1;" onchange='this.size=1;'>
                                            <option value="" selected disabled>Pilih Jenis Input Suara</option>
                                            <option value="1">Input Suara TPS</option>
                                            <option value="2">Input Suara Caleg</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Dapil Selection -->
                        <div class="row" id="row-input-suara-pilih-dapil" hidden>
                            <div class="col-md-12">
                                <div id="existing-product">
                                    <div class="form-group">
                                        <label id="pilih-dapil-label" for="pilih-dapil">Pilih Dapil</label>
                                        <select class="form-control scrollable-menu" id="select-input-suara-pilih-dapil" name="pilihDapil" onchange="inputSuaraPilihDapilEvent()" onfocus="this.size=1;" onchange='this.size=1;'>
                                            <option value="" selected disabled>Pilih Dapil</option>
                                            {{#dapil}}
                                                <option value="{{id}}">Dapil {{nomor_dapil}} {{nama}}</option>
                                            {{/dapil}}
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
    
                        <!-- Kecamatan Selection -->
                        <div class="row" id="row-input-suara-pilih-kecamatan" hidden>
                            <div class="col-md-12">
                                <div id="existing-product">
                                    <div class="form-group">
                                        <label id="kecamatan-label" for="product_name">Kecamatan</label>
                                        <select class="form-control scrollable-menu" id="select-input-suara-pilih-kecamatan" name="pilihKecamatan" onchange="inputSuaraPilihKecamatanEvent()" disabled onfocus="this.size=1;" onchange='this.size=1;'>
                                            <option value="" selected disabled>Pilih Kecamatan</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
    
                        <!-- Kelurahan Selection -->
                        <div class="row" id="row-input-suara-pilih-kelurahan" hidden>
                            <div class="col-md-12">
                                <div id="existing-product">
                                    <div class="form-group">
                                        <label id="kelurahan-label" for="product_name">Kelurahan</label>
                                        <select class="form-control scrollable-menu" id="select-input-suara-pilih-kelurahan" name="pilihKelurahan" onchange="inputSuaraPilihKelurahanEvent()" disabled onfocus="this.size=1;" onchange='this.size=1;'>
                                            <option value="" selected disabled>Pilih Kelurahan</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
    
                        <!-- TPS Selection -->
                        <div class="row" id="row-input-suara-tps-pilih-tps" hidden>
                            <div class="col-md-12">
                                <div id="existing-product">
                                    <div class="form-group">
                                        <label id="tps-label" for="product_name">Tempat Pemilihan Suara</label>
                                        <select class="form-control scrollable-menu" id="select-input-suara-tps-pilih-tps" name="pilihTps" onchange="pilihInputSuaraTpsPilihTpsEvent()" disabled onfocus="this.size=1;" onchange='this.size=1;'>
                                            <option value="" selected disabled>Pilih TPS</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
    
                        <!-- Caleg Selection -->
                        <div class="row" id="row-input-suara-caleg-pilih-caleg" hidden>
                            <div class="col-md-12">
                                <div id="existing-product">
                                    <div class="form-group">
                                        <label id="pilih-caleg-label" for="pilih-caleg">Calon Legislatif</label>
                                        <select class="form-control scrollable-menu" id="select-input-suara-caleg-pilih-caleg" name="pilihCaleg" disabled onchange="pilihInputSuaraCalegPilihCalegEvent()" onfocus="this.size=1;" onchange='this.size=1;'>
                                            <option value="" selected disabled>Pilih Caleg</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
    
                        <!-- Submit Button -->
                        <div class="row">
                            <div class="col-md-2">
                                <button id="submit-pilihjenis-inputsuara" class="btn btn-primary" type="button" disabled>
                                    <span id="loading-pilihjenis-inputsuara" class="spinner-border-sm" role="status" style="margin-bottom: 10%;">Submit</span>
                                </button>
                            </div>
                        </div>
                    </form>
    
                    <!-- JavaScript Section -->
                    <script>
                        const buttonReturnInputSuara = document.getElementById("button-return-input-suara");
                        // Get Elemen Card by ID
                        const cardInputSuaraTps = document.getElementById("card-input-suara-tps");

                        const cardInputSuaraCaleg = document.getElementById("card-input-suara-caleg");
                        const cardPilihJenisInputSuara = document.getElementById("card-pilihjenis-inputsuara");
                        const buttonPilihJenisInputSuara = document.getElementById("submit-pilihjenis-inputsuara");
                        const loadingPilihJenisInputSuara = document.getElementById("loading-pilihjenis-inputsuara");
                        // Pilih Jenis Input Suara Elements 
                        const pilihJenisInputSuara = document.getElementById("pilihjenis-inputsuara");
                        const rowInputSuaraPilihDapil = document.getElementById("row-input-suara-pilih-dapil");
                        const rowInputSuaraCalegPilihCaleg = document.getElementById("row-input-suara-caleg-pilih-caleg");
                        const rowInputSuaraPilihKecamatan = document.getElementById("row-input-suara-pilih-kecamatan");
                        const rowInputSuaraPilihKelurahan = document.getElementById("row-input-suara-pilih-kelurahan");
                        const rowInputSuaraTpsPilihTps = document.getElementById("row-input-suara-tps-pilih-tps");
                        const selectInputSuaraPilihDapil = document.getElementById("select-input-suara-pilih-dapil");
                        const selectInputSuaraPilihKecamatan = document.getElementById("select-input-suara-pilih-kecamatan");
                        const selectInputSuaraPilihKelurahan = document.getElementById("select-input-suara-pilih-kelurahan")
                        const selectInputSuaraCalegPilihCaleg = document.getElementById("select-input-suara-caleg-pilih-caleg");
                        const selectInputSuaraTpsPilihTps = document.getElementById("select-input-suara-tps-pilih-tps")
    
                        // Pilih Jenis Input Suara Event Handler
                        const pilihJenisInputSuaraEvent = () => {
                            rowInputSuaraPilihKecamatan.removeAttribute("hidden");
                            rowInputSuaraPilihKelurahan.removeAttribute("hidden");
                            // Ketika fungsi dipanggil row-selected dibawah dapil menjadi index 0 dan disabled
                            selectInputSuaraPilihKecamatan.setAttribute("disabled", true);
                            selectInputSuaraPilihKelurahan.setAttribute("disabled", true);
                            selectInputSuaraTpsPilihTps.setAttribute("disabled", true);
                            selectInputSuaraCalegPilihCaleg.setAttribute("disabled", true);

                            selectInputSuaraPilihDapil.selectedIndex = 0;
                            selectInputSuaraPilihKecamatan.selectedIndex = 0;
                            selectInputSuaraPilihKelurahan.selectedIndex = 0;
                            selectInputSuaraTpsPilihTps.selectedIndex = 0;
                            selectInputSuaraCalegPilihCaleg.selectedIndex = 0;
                            if (pilihJenisInputSuara.selectedIndex === 2) {
                                rowInputSuaraPilihDapil.removeAttribute("hidden");
                                buttonPilihJenisInputSuara.setAttribute("disabled", true);
                                rowInputSuaraCalegPilihCaleg.removeAttribute("hidden");
    
                                rowInputSuaraTpsPilihTps.setAttribute("hidden", true);
                            } else if(pilihJenisInputSuara.selectedIndex === 1) {
                                rowInputSuaraPilihDapil.removeAttribute("hidden");
                                rowInputSuaraCalegPilihCaleg.setAttribute("hidden", true);
                                rowInputSuaraTpsPilihTps.removeAttribute("hidden");                            
                            }
                        }
    
                        // Input Suara Pilih Dapil Event Handler
                        function inputSuaraPilihDapilEvent() {
                            // Menghapus Select Option sebelum mengambil data
                            while (selectInputSuaraPilihKecamatan.options.length > 1) {
                                selectInputSuaraPilihKecamatan.remove(1);
                            }
                            // Default select option == 0
                            selectInputSuaraPilihKecamatan.selectedIndex = 0;
                            selectInputSuaraPilihKelurahan.selectedIndex = 0;
                            selectInputSuaraTpsPilihTps.selectedIndex = 0;
                            selectInputSuaraCalegPilihCaleg.selectedIndex = 0;
                            // Ketika fungsi dipanggil semua row-select option dibawah kecamatan menjadi index 0 dan disabled
                            selectInputSuaraPilihKelurahan.setAttribute("disabled", true);
                            selectInputSuaraTpsPilihTps.setAttribute("disabled", true);
                            selectInputSuaraCalegPilihCaleg.setAttribute("disabled", true);
                            const idDp = selectInputSuaraPilihDapil.value;

                            fetch(`/pilih/kecamatan/${idDp}`, {
                                headers: {
                                    "Content-Type": "application/json"
                                },
                            })
                            .then(response => {
                                return response.json()
                            })
                            .then(results => {
                                if (results.status !== 200) {
                                    Swal.close();
                                    InternalServerError(results.messageresults.message);
                                    return 0;
                                }
                                results["kecamatan"].forEach(kecamatan => {
                                    const option = document.createElement("option");
                                    option.value = kecamatan.id; // Sesuaikan dengan properti id kecamatan
                                    option.textContent = kecamatan.nama; // Sesuaikan dengan properti nama kecamatan
                                    selectInputSuaraPilihKecamatan.appendChild(option);
                                });
                            })
                            .catch(error => {
                                console.error("Error fetching data:", error);
                                ErrorNotif(error);
                            });
                            selectInputSuaraPilihKecamatan.removeAttribute("disabled");
                            if (selectInputSuaraPilihDapil !== 0 ) {
                                selectInputSuaraPilihKecamatan.removeAttribute("disabled");
                            }
                        }

                        function inputSuaraPilihKecamatanEvent() {
                             // Menghapus Select Option sebelum mengambil data
                            while (selectInputSuaraPilihKelurahan.options.length > 1) {
                                selectInputSuaraPilihKelurahan.remove(1);
                            }
                            // Default select option == 0
                            selectInputSuaraPilihKelurahan.selectedIndex = 0;
                            selectInputSuaraTpsPilihTps.selectedIndex = 0;
                            selectInputSuaraCalegPilihCaleg.selectedIndex = 0;
                            // Ketika fungsi dipanggil semua row-select option dibawah kelurahan menjadi index 0 dan disabled
                            selectInputSuaraTpsPilihTps.setAttribute("disabled", true);
                            selectInputSuaraCalegPilihCaleg.setAttribute("disabled", true);

                            const idKc = selectInputSuaraPilihKecamatan.value;
                            fetch(`/pilih/kelurahan/${idKc}`, {
                                headers: {
                                    "Content-Type": "application/json"
                                },
                            })
                            .then(response => response.json())
                            .then(results => {
                                results["kelurahan"].forEach(kelurahan => {
                                    const option = document.createElement("option");
                                    option.value = kelurahan.id; // Sesuaikan dengan properti id kelurahan
                                    option.textContent = kelurahan.nama; // Sesuaikan dengan properti nama kecamatan
                                    selectInputSuaraPilihKelurahan.appendChild(option);
                                });
                            })
                            .catch(error => {
                                console.error(error);
                                ErrorNotif(error)
                            })

                            selectInputSuaraPilihKelurahan.removeAttribute("disabled");
                            if (selectInputSuaraPilihKecamatan !== 0) {
                                selectInputSuaraPilihKelurahan.removeAttribute("disabled");
                            }
                        }

                        function inputSuaraPilihKelurahanEvent() {
                            while (selectInputSuaraTpsPilihTps.options.length > 1) {
                                selectInputSuaraTpsPilihTps.remove(1);
                            }
                            while (selectInputSuaraCalegPilihCaleg.options.length > 1) {
                                selectInputSuaraCalegPilihCaleg.remove(1);
                            }
                            // Default select option == 0
                            selectInputSuaraTpsPilihTps.selectedIndex = 0;
                            selectInputSuaraCalegPilihCaleg.selectedIndex = 0;
                            buttonPilihJenisInputSuara.setAttribute("disabled", true);
                            if (pilihJenisInputSuara.selectedIndex === 1) {
                                selectInputSuaraTpsPilihTps.removeAttribute("disabled");
                            } else if (pilihJenisInputSuara.selectedIndex === 2) {
                                selectInputSuaraCalegPilihCaleg.removeAttribute("disabled");
                            }

                            if (!rowInputSuaraTpsPilihTps.hidden) {
                                const idKelurahan = selectInputSuaraPilihKelurahan.value;
                                fetch(`/pilih/tps/${idKelurahan}`, {
                                    headers: {
                                        "Content-Type": "application/json"
                                    },
                                })
                                .then(response => response.json())
                                .then(results => {
                                    if (results["tps"] === null && rowInputSuaraCalegPilihCaleg.hidden) {
                                        InternalServerError("Data TPS belum tersedia")
                                        return 0;
                                    }
                                    results["tps"].forEach(tps => {
                                        const option = document.createElement("option");
                                        option.value = tps.id; // Sesuaikan dengan properti id tps
                                        option.textContent = tps.nama; // Sesuaikan dengan properti nama kecamatan
                                        selectInputSuaraTpsPilihTps.appendChild(option);
                                    });
                                })
                                .catch(error => {
                                    ErrorNotif(error);
                                });
                                return 0;
                            } else if (!rowInputSuaraCalegPilihCaleg.hidden) {
                                const idDapil = selectInputSuaraPilihDapil.value;
                                fetch(`/pilih/caleg/${idDapil}`, {
                                    headers: {
                                        "Content-Type": "application/json"
                                    },
                                })
                                .then(response =>  response.json())
                                .then(results => {
                                    if (results["caleg"] === null && rowInputSuaraTpsPilihTps.hidden) {
                                        InternalServerError("Data Caleg belum tersedia")
                                        return 0;
                                    }
                                    results["caleg"].forEach(caleg => {
                                        const option = document.createElement("option");
                                        option.value = caleg.id; // Sesuaikan dengan properti id caleg
                                        option.textContent = caleg.nama; // Sesuaikan dengan properti nama kecamatan
                                        selectInputSuaraCalegPilihCaleg.appendChild(option);
                                    });
                                })
                                return 0;
                            }
                        }
    
                        // Button Pilih Jenis Input Suara Click Event Handler
                        buttonPilihJenisInputSuara.addEventListener("click", () => {
                            event.preventDefault();
    
                            loadingPilihJenisInputSuara.innerText = "";
                            loadingPilihJenisInputSuara.classList.add("spinner-border");

                            const headerInputSuaraTps = document.getElementById("header-input-suara-tps");
                            headerInputSuaraTps.innerText = null;
                            if (pilihJenisInputSuara.selectedIndex === 1) {
                                const idTps = selectInputSuaraTpsPilihTps.value;
                                fetch(`/input-suara/tps/${idTps}`, {
                                    headers: {
                                        "Content-Type": "application/json"
                                    },
                                })
                                .then(response => response.json())
                                .then(results => {
                                    console.log(results);
                                    if (results.status !== 200) {
                                        InternalServerError(results.message);
                                        return 0;
                                    }
                                    headerInputSuaraTps.innerText = `${results.tps[0]["nama_kecamatan"]} - ${results.tps[0]["nama_kelurahan"]} - ${results.tps[0]["nama_tps"]}`
                                })
                                .catch(error => {
                                    ErrorNotif(error);
                                });
                                const dapilId = selectInputSuaraPilihDapil.value;
                                // Simpan referensi ke tabel
                                const tabelCaleg = document.getElementById('tabel-caleg').getElementsByTagName('tbody')[0];
                                // Membersihkan semua baris di dalam tabel
                                while (tabelCaleg.firstChild) {
                                    tabelCaleg.removeChild(tabelCaleg.firstChild);
                                }
                                // Fetch data dari server
                                fetch(`/pilih/caleg/${dapilId}`)
                                .then(response => response.json())
                                .then(results => {
                                    console.log(results);
                                    if (results.status !== 200) {
                                        InternalServerError(results.message);
                                        return 0;
                                    }
                                    let counter = 1;
                                    results.caleg.forEach(caleg => {
                                        const newRow = tabelCaleg.insertRow();

                                        const cellNomorUrut = newRow.insertCell(0);
                                        cellNomorUrut.textContent = counter++;

                                        newRow.id = `${caleg.id}`;
                                        newRow.setAttribute(`data-idcaleg`, caleg.id);
                                        const cellNama = newRow.insertCell(1);
                                        cellNama.textContent = caleg.nama;

                                        const cellJumlahSuara = newRow.insertCell(2);
                                        const inputId = `jumlah-suara-${caleg.id}`;
                                        cellJumlahSuara.innerHTML = `
                                            <input type="number" min="0" value="0" name="jumlahSuara" id="${inputId}">
                                        `
                                    })
                                })
                                .catch(error => ErrorNotif(error));
                                setTimeout(() => {
                                    loadingPilihJenisInputSuara.classList.remove("spinner-border");
                                    loadingPilihJenisInputSuara.innerText = "Submit";
    
                                    cardInputSuaraTps.removeAttribute("hidden");
                                    cardPilihJenisInputSuara.setAttribute("hidden", true);
                                    buttonReturnInputSuara.removeAttribute("hidden")
                                }, 1000);
                            } else if (pilihJenisInputSuara.selectedIndex === 2) {
                                const headerInputSuaraCaleg = document.getElementById("header-input-suara-caleg");
                                headerInputSuaraCaleg.innerText = null;
                                 // Setup Table TPS
                                 $('#tabel-inputsuara-pertps').DataTable().destroy();
                                const calegPerTpsTable = $('#tabel-inputsuara-pertps').DataTable({
                                    "order": [[0, 'asc']] // Mengurutkan berdasarkan kolom pertama secara menaik
                                });
                                const idCaleg = selectInputSuaraCalegPilihCaleg.value;
                                let namaCaleg;
                                let namaKelurahan;
                                fetch(`/input-suara/caleg/${idCaleg}`, {
                                    headers: {
                                        "Content-Type": "application/json"
                                    },
                                })
                                .then(response =>  response.json())
                                .then(results => {
                                    console.log(results);
                                    if (results.status !== 200 && results.tps === null) {
                                        InternalServerError("Data TPS belum tersedia");
                                        return 0;
                                    }
                                    namaCaleg = results.caleg["nama"]
                                });

                                fetch(`/pilih/tps/${selectInputSuaraPilihKelurahan.value}`, {
                                    headers: {
                                        "Content-Type": "application/json"
                                    },
                                })
                                .then(response => response.json())
                                .then(results => {
                                    console.log(results);
                                    if (results.tps === null) {
                                        InternalServerError("Data TPS belum tersedia");
                                        loadingPilihJenisInputSuara.classList.remove("spinner-border");
                                        loadingPilihJenisInputSuara.innerText = "Submit";
                                        return 0;
                                    }
                                    // Clear existing data in the DataTable
                                    calegPerTpsTable.clear();
                                    // Add new data to the DataTable
                                    results.tps.forEach(tps => {
                                        calegPerTpsTable.row.add([
                                            tps.nama,
                                            `<input type="number" min="0" value="0" name="jumlahSuara" class="jumlah-suara">`,
                                            `<button class="btn btn-primary submit-inputsuara">Update</button>`
                                        ]).draw();
                                    });
                                    namaKelurahan = results.kelurahan["nama"];
                                    headerInputSuaraCaleg.innerText = `${namaCaleg} - ${namaKelurahan}`
                                    // Menampilkan Page Input Suara Caleg
                                    loadingPilihJenisInputSuara.classList.remove("spinner-border");
                                    loadingPilihJenisInputSuara.innerText = "Submit";
                                    cardInputSuaraCaleg.removeAttribute("hidden");
                                    cardPilihJenisInputSuara.setAttribute("hidden", true);
                                    buttonReturnInputSuara.removeAttribute("hidden");
                                })
                            }
                        });

                        buttonReturnInputSuara.addEventListener("click", (e) => {
                            e.preventDefault();

                            cardInputSuaraCaleg.setAttribute("hidden", true);
                            cardInputSuaraTps.setAttribute("hidden", true);
                            cardPilihJenisInputSuara.removeAttribute("hidden");
                            buttonReturnInputSuara.setAttribute("hidden", true);
                        })
    
                        // Input Suara Caleg Pilih Caleg Event Handler
                        function pilihInputSuaraCalegPilihCalegEvent() {
                            if (selectInputSuaraCalegPilihCaleg.selectedIndex !== 0) {
                                buttonPilihJenisInputSuara.removeAttribute("disabled");
                            }
                        }

                        function pilihInputSuaraTpsPilihTpsEvent() {
                            if (selectInputSuaraTpsPilihTps.selectedIndex !== 0) {
                                buttonPilihJenisInputSuara.removeAttribute("disabled");
                            }
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
    
</div>
<script>
    var status = "{{status}}"
    const loadingCard = document.getElementById("card-spinners")
    document.addEventListener('DOMContentLoaded', function() {
        if (status === "200") {
            loadingCard.setAttribute("hidden", true);
            cardPilihJenisInputSuara.removeAttribute("hidden");
        }
    });
</script>
<script>
    const buktiFoto = document.getElementById("bukti-foto");
    const deletePhoto = document.getElementById("delete-photo");
    const buttonDeletePhoto = document.getElementById("button-delete-photo");
    const photoFileName = document.getElementById("photo-file-name");
    const loadingUpload = document.getElementById("loading-upload");

    let photoFilename = "";
    // Function Upload Foto
    function uploadImageToServer(path, file) {
        const formData = new FormData();
        formData.append("image", file);
        loadingUpload.removeAttribute("hidden");
        buktiFoto.setAttribute("hidden", true);
        fetch(path, {
            method: "POST",
            body: formData,
        })
        .then(response => response.json())
        .then(results => {
            if (results.status !== 200) {
                InternalServerError(results.error);
                return 0;
            }
            loadingUpload.setAttribute("hidden", true);
            // Setelah gambar di upload dan fungsi tidak return 0, maka event berikut dilakukan
            deletePhoto.removeAttribute("hidden");
            photoFileName.innerText = buktiFoto.files[0]["name"];
            ServerStatusOke(results.message); 
        })
        .catch(error => ErrorNotif(error));
    }
    function deleteImageFromServer(path, filename) {
        const data = {
            filename: filename,
        }
        fetch(path, {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(results => {
            console.log(results);
            if (results.status !== 200) {
                InternalServerError(results.error);
                return 0;
            }
            ServerStatusOke(results.message); // Notify Succes
            return results.status;
        })
        .catch(error => {
            console.error(error);
            ErrorNotif(error);
        });
    }
    buktiFoto.addEventListener("change", (e) => {
        e.preventDefault();
        if (buktiFoto.files[0] === undefined) {
            console.log(buktiFoto.files[0] === undefined);
            return 0;
        }
        console.log(buktiFoto.files[0]);
        uploadImageToServer("/upload/image", buktiFoto.files[0]);
    })
    buttonDeletePhoto.addEventListener("click", (e) => {
        e.preventDefault();

        deleteImageFromServer(`/delete/image`, buktiFoto.files[0]["name"]);
        clearPhotoForm(buktiFoto);
    })
    function clearPhotoForm(file) {
        if (file.files["length"] > 0) {
            deletePhoto.setAttribute("hidden", true);
            buktiFoto.removeAttribute("hidden");
            buktiFoto.value = "";
            photoFileName.textContent = null;
        }
    }
</script>